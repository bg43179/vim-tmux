function rsvim {
    src=$1
    des=$2
    host=$(echo $src | cut -d ':' -f 1)
    dir_path=$(echo $src | cut -d ':' -f 2)
    exclude=.rsync_exclude

    # download
    if [ -z $src ] && [ -z $des ]; then
        echo "Download from exists..."
        src=$(cat .exrc | grep remote | cut -d "'" -f 2)
        des=.
    # get dir from remote dir name if local argument not provided
    elif [ -z $des ]; then
        des=$(echo $src | rev | cut -d'/' -f-1 | rev)
    fi 

    if [ ! -f $des/$exclude ] || [ ! -f $des/.exrc ]; then
        # avoid rsync large files
        #ssh $host "find $dir_path -size +200M | sed 's/.\///g'" > $exclude
        ssh $host "cd $dir_path; find . -size +200M | sed 's/^.\///g'" \
            > $des/$exclude

        # use .gitignore to exclude files
        # can use .rsync_exclude as another excluding files
        if [ -f $des/.gitignore ]; then
            cat $des/.gitignore >> $des/$exclude
        fi

        # for vim RemoteSync function 
        conf="let g:enable_rsync  = 1\n" 
        conf+="let g:rsync_remote  = '$src/'\n"
        conf+="let g:rsync_local   = '.'\n"
        conf+="let g:rsync_exclude = '$exclude'"

        echo $conf > $des/.exrc
    fi

    rsync -avr --exclude={$des/.git/,$des/.exrc,$des/$exclude} \
          --exclude-from=$des/$exclude $src $des
}

# replace gf functionality. jump to file by file name
function ctag {
    ctags -R --extra=+f .
    awk '
        match($1, /.*\./) {
            file=substr($1, RSTART, RLENGTH-1)
        }
        {
            if ($1 ~ /.*\./) {
                #print $1
                print file"\t"$2"\t"$3"\t"$4
            }
            else {
                print $0
            }
        }
    ' tags | rev | rev >  .tags
    rm tags
}

# edit the selected bash config file
function zshrc {
    if [[ "$1" == "f" ]]; then
        vim ~/.zsh_functions
    else
        vim ~/.zshrc
    fi
}
function leet {
    name=''
    for part in "$@"
    do
        name=$name$part
    done

code="import java.util.*;

public class $name {
	public static void main(String[] args) {
		$name tester = new $name();
		tester.unitTest();
	}
	public void unitTest() {

	}
}"
    leetcode
    echo $code > $name.java
    vim $name.java
}

function javat {
    code="import java.util.*;\n\npublic class $1{\n\tpublic static void main(String[] args) {\n\n\t}\n}";
	echo $code > $1.java
	vim $1.java
}

# shortcut for compiling and running Java programs (I use this for competitions)
function jj {
    filename="${1%.*}"
    javac $filename.java
    if [[ $? == 0 ]]; then
       java $filename
    fi
}
